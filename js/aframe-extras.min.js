AFRAME.registerComponent("gesture-detector", {
  schema: {
    element: { default: "canvas" }
  },
  init: function () {
    this.targetElement =
      this.data.element === "canvas"
        ? this.el.sceneEl.canvas
        : document.querySelector(this.data.element);
    if (!this.targetElement) {
      this.el.sceneEl.addEventListener("render-target-loaded", () => {
        this.targetElement =
          this.data.element === "canvas"
            ? this.el.sceneEl.canvas
            : document.querySelector(this.data.element);
        this.addEventListeners();
      });
    } else {
      this.addEventListeners();
    }
    this.previousState = null;
  },
  addEventListeners: function () {
    this.targetElement.addEventListener("touchstart", this.onTouchStart.bind(this), true);
    this.targetElement.addEventListener("touchmove", this.onTouchMove.bind(this), true);
    this.targetElement.addEventListener("touchend", this.onTouchEnd.bind(this), true);
  },
  onTouchStart: function (event) {
    this.emitGesture("start", event);
  },
  onTouchMove: function (event) {
    this.emitGesture("move", event);
  },
  onTouchEnd: function (event) {
    this.emitGesture("end", event);
  },
  emitGesture: function (type, event) {
    this.el.emit(`gesture-${type}`, {
      type: type,
      touches: event.touches
    });
  }
});
